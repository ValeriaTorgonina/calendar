!function(t){var o={};function e(r){if(o[r])return o[r].exports;var i=o[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=o,e.d=function(t,o,r){e.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,o){if(1&o&&(t=e(t)),8&o)return t;if(4&o&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&o&&"string"!=typeof t)for(var i in t)e.d(r,i,function(o){return t[o]}.bind(null,i));return r},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=0)}([function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});new(e(1).Field)(document.all.field)},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=e(2),i=function(){function t(t){this.domElem=t,this.getCoords(),this.manager=new r.TravelManager(this),this.manager.run()}return t.prototype.getCoords=function(){this.coords=this.domElem.getBoundingClientRect()},t.prototype.createBall=function(){var t=document.createElement("div");return this.addBall(t),t},t.prototype.addBall=function(t){this.domElem.appendChild(t),t.classList.add("ball")},t}();o.Field=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=e(3),i=function(){function t(t){this.field=t,this.balls=[],this.button=document.querySelector("button"),this.addBall(),this.clickButton()}return t.prototype.clickButton=function(){var t=this;this.button.onclick=function(){t.addBall()}},t.prototype.removeBall=function(){this.balls.pop()},t.prototype.addBall=function(){var t=this.field.createBall();this.balls.push(new r.Ball(t,this.field.coords))},t.prototype.checkingConditionsForVectorChange=function(){var t=this,o=this.balls.filter(function(o){return o.coords.top<=t.field.coords.top||o.coords.left<=t.field.coords.left||o.coords.right>=t.field.coords.right||o.coords.bottom>=t.field.coords.bottom||t.checkingBallCrossing(o)});this.changeVector(o)},t.prototype.checkingBallCrossing=function(t){var o=this;return!!this.balls.filter(function(o){return o!==t}).find(function(e){return o.isCrossingWithBall(t.coords,e.coords)})},t.prototype.isCrossingWithBall=function(t,o){return t.right>=o.left&&t.right<o.right&&o.top-t.top<40&&t.top-o.top<40||t.left<=o.right&&t.left>o.left&&o.top-t.top<40&&t.top-o.top<40||t.bottom>=o.top&&t.bottom<o.bottom&&o.left-t.left<40&&t.left-o.left<40||t.top<=o.bottom&&t.top>o.top&&o.left-t.left<40&&t.left-o.left<40},t.prototype.changeVector=function(t){var o=this;t.forEach(function(t){var e=o.computeBallVector(t),r=e.vectorX,i=e.vectorY;t.vectorX=r,t.vectorY=i,t.reverseDecor()})},t.prototype.computeBallVector=function(t){return t.coords.top<=this.field.coords.top&&t.vectorX>0||t.coords.left<=this.field.coords.left&&t.vectorY>0?{vectorX:4,vectorY:4}:t.coords.top<=this.field.coords.top&&t.vectorX<0||t.coords.right>=this.field.coords.right&&t.vectorY>0?{vectorX:-4,vectorY:4}:t.coords.left<=this.field.coords.left&&t.vectorY<0||t.coords.bottom>=this.field.coords.bottom&&t.vectorX>0?{vectorX:4,vectorY:-4}:t.coords.right>=this.field.coords.right&&t.vectorY<0||t.coords.bottom>=this.field.coords.bottom&&t.vectorX<0?{vectorX:-4,vectorY:-4}:{vectorY:-1*t.vectorY,vectorX:-1*t.vectorX}},t.prototype.run=function(){var t,o,e,r,i,c=this;o=(t={timing:n,draw:function(){c.balls.forEach(function(t){return t.move()}),c.checkingConditionsForVectorChange()}}).timing,e=t.draw,r=t.duration,i=performance.now(),requestAnimationFrame(function t(n){var c=(n-i)/(r||1);c>1&&(c=r?1:0);var s=o(c);e(s),c<1&&requestAnimationFrame(t)})},t}();function n(t){return t}o.TravelManager=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=function(){function t(t,o){this.domElem=t,this.fieldCoords=o,this.vectorX=4,this.vectorY=4,this.getCoords(),this.createDecor()}return t.prototype.createDecor=function(){var t=document.createElement("div");this.addDecor(t)},t.prototype.addDecor=function(t){this.domElem.appendChild(t),t.classList.add("decor"),this.decor=t},t.prototype.reverseDecor=function(){"normal"===this.decor.style.animationDirection?this.decor.style.animationDirection="reverse":this.decor.style.animationDirection="normal"},t.prototype.move=function(){this.domElem.style.left=this.coords.left-(this.fieldCoords.left+2)+this.vectorX+"px",this.domElem.style.top=this.coords.top-(this.fieldCoords.top+2)+this.vectorY+"px",this.getCoords()},t.prototype.getCoords=function(){this.coords=this.domElem.getBoundingClientRect()},t}();o.Ball=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,